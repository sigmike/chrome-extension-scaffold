#!/usr/bin/env watchr

require 'rubygems'
require "bundler/setup"
require 'haml'
<% if coffee? -%>
require 'erubis'
require 'coffee-script'
<% end -%>

def log_built(src, dst)
  puts [src, dst].join(" => ")
end

def log_failure(src, e)
  f = STDERR
  f.puts "Failed to convert #{src}:"
  f.puts "#{e.message} (#{e.class})"
  f.puts e.backtrace.join("\n")
end

<% if coffee? -%>
def build_coffee(src)
  dst = src.sub /\.coffee$/, ''
  js = File.read(src)
  eruby = Erubis::Eruby.new(js)
  js = eruby.result(binding())
  js = CoffeeScript.compile(js)
  File.open(dst, "w") { |f| f.write js }
  log_built(src, dst)
rescue => e
  log_failure(src, e)
end

watch( '(.+)\.coffee$' ) { |md| build_coffee(md[0]) }
Dir["**/*.coffee"].each { |file| build_coffee(file) }
<% end -%>

<% if haml? -%>
def build_haml(src)
  dst = src.sub /\.haml$/, ''
  template = File.read(src)
  haml_engine = Haml::Engine.new(template, :filename => src)
  output = haml_engine.render(binding())
  File.open(dst, "w") { |f| f.write output }
  log_built(src, dst)
rescue => e
  log_failure(src, e)
end

watch( '(.+)\.haml$' ) { |md| build_haml(md[0]) }
Dir["**/*.haml"].each { |file| build_haml(file) }
<% end -%>
